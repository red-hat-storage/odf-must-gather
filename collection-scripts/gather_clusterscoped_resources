#!/usr/bin/env bash

# Expect base collection path as an exported variable
# If it is not defined, use PWD instead
BASE_COLLECTION_PATH=${BASE_COLLECTION_PATH:-"$(pwd)"}

# Command List
commands_get=()

# collect oc output of OC get commands
commands_get+=("pv")
commands_get+=("ob")
commands_get+=("sc")
commands_get+=("csidriver")
commands_get+=("nodes -o wide --show-labels")
commands_get+=("clusterversion")
commands_get+=("infrastructures.config")
commands_get+=("clusterrole")
commands_get+=("clusterrolebinding")
commands_get+=("scc")
commands_get+=("volumereplicationclass")
commands_get+=("volumesnapshotclass")
commands_get+=("volumesnapshotcontent")
commands_get+=("volumegroupsnapshotclass")
commands_get+=("volumegroupsnapshotcontent")
commands_get+=("storageclusterpeers")
commands_get+=("networkfences")
commands_get+=("networkfenceclasses")

# collect yaml output of OC commands
oc_yamls=()
oc_yamls+=("pv")
oc_yamls+=("ob")
oc_yamls+=("sc")
oc_yamls+=("nodes")
oc_yamls+=("csidriver")
oc_yamls+=("clusterversion")
oc_yamls+=("infrastructures.config")
oc_yamls+=("clusterrole")
oc_yamls+=("clusterrolebinding")
oc_yamls+=("scc")
oc_yamls+=("volumereplicationclass")
oc_yamls+=("volumesnapshotclass")
oc_yamls+=("volumesnapshotcontent")
oc_yamls+=("volumegroupsnapshotclass")
oc_yamls+=("volumegroupsnapshotcontent")
oc_yamls+=("storageclusterpeers")
oc_yamls+=("networkfences")
oc_yamls+=("networkfenceclasses")

# collect describe output of OC commands
commands_desc=()
commands_desc+=("pv")
commands_desc+=("ob")
commands_desc+=("sc")
commands_desc+=("nodes")
commands_desc+=("csidriver")
commands_desc+=("clusterversion")
commands_desc+=("infrastructures.config")
commands_desc+=("clusterrole")
commands_desc+=("clusterrolebinding")
commands_desc+=("scc")
commands_desc+=("volumereplicationclass")
commands_desc+=("volumesnapshotclass")
commands_desc+=("volumesnapshotcontent")
commands_desc+=("volumegroupsnapshotclass")
commands_desc+=("volumegroupsnapshotcontent")
commands_desc+=("storageclusterpeers")
commands_desc+=("networkfences")
commands_desc+=("networkfenceclasses")

# collection path for OC commands
mkdir -p "${BASE_COLLECTION_PATH}/cluster-scoped-resources/oc_output/"

# Run the Collection of Resources oc get to list
for command_get in "${commands_get[@]}"; do
    dbglog "collecting oc command ${command_get}"
    COMMAND_OUTPUT_FILE=${BASE_COLLECTION_PATH}/cluster-scoped-resources/oc_output/get_${command_get// /_}
    # shellcheck disable=SC2086
    { oc get ${command_get}; } >>"${COMMAND_OUTPUT_FILE}"
done

# Run the Collection of Resources oc yaml to list
for oc_yaml in "${oc_yamls[@]}"; do
    { oc adm inspect --dest-dir="${BASE_COLLECTION_PATH}" ${LOG_FILTER_ARGS:+"${LOG_FILTER_ARGS}"} "${oc_yaml}" 2>&1; } | dbglog
done

# Run the Collection of Resources oc describe to list
for command_desc in "${commands_desc[@]}"; do
    dbglog "collecting oc command ${command_desc}"
    COMMAND_OUTPUT_FILE=${BASE_COLLECTION_PATH}/cluster-scoped-resources/oc_output/desc_${command_desc// /_}
    { oc describe "${command_desc}"; } >>"${COMMAND_OUTPUT_FILE}"
done
